{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_LENGTH","SORT_ALPHABET","App","useState","sortType","setsortType","reverse","setReverse","goods","prepared","sort","good1","good2","length","localeCompare","Error","getPreparedGoods","className","type","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAEIC,EAAc,SACdC,EAAgB,iBA2Bf,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EA7BR,SAA0BA,EAA1B,GAAyD,IAAtBJ,EAAqB,EAArBA,SAAUE,EAAW,EAAXA,QACrCG,EAAQ,YAAOD,GAqBrB,OAnBIJ,GACFK,EAASC,MAAK,SAACC,EAAOC,GACpB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,OAASD,EAAMC,OAE9B,KAAKZ,EACH,OAAOU,EAAMG,cAAcF,GAE7B,QACE,MAAM,IAAIG,MAAM,6BAKpBT,GACFG,EAASH,UAGJG,EAOOO,CAAiBjB,EAAiB,CAAEK,WAAUE,YAE5D,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBb,IAAaH,GAAiB,YAC3DkB,QAAS,kBAAMd,EAAYJ,IAH7B,iCAQA,wBACEiB,KAAK,SACLD,UAAS,4BAAuBb,IAAaJ,GAAe,YAC5DmB,QAAS,kBAAMd,EAAYL,IAH7B,4BAQA,wBACEkB,KAAK,SACLD,UAAS,6BAAwBX,GAAW,YAC5Ca,QAAS,kBAAMZ,GAAW,SAAAa,GAAI,OAAKA,MAHrC,sBAQEhB,GAAYE,IACZ,wBACEY,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPZ,GAAW,GACXF,EAAY,KALhB,sBAaJ,6BACGG,EAAMa,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC1FlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4b2cad9b.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nconst SORT_LENGTH = 'length';\nconst SORT_ALPHABET = 'alphabetically';\n\nfunction getPreparedGoods(goods, { sortType, reverse }) {\n  const prepared = [...goods];\n\n  if (sortType) {\n    prepared.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_LENGTH:\n          return good1.length - good2.length;\n\n        case SORT_ALPHABET:\n          return good1.localeCompare(good2);\n\n        default:\n          throw new Error('Sorting went wrong...');\n      }\n    });\n  }\n\n  if (reverse) {\n    prepared.reverse();\n  }\n\n  return prepared;\n}\n\nexport const App = () => {\n  const [sortType, setsortType] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const goods = getPreparedGoods(goodsFromServer, { sortType, reverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SORT_ALPHABET && 'is-light'}`}\n          onClick={() => setsortType(SORT_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SORT_LENGTH && 'is-light'}`}\n          onClick={() => setsortType(SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!reverse && 'is-light'}`}\n          onClick={() => setReverse(prev => !prev)}\n        >\n          Reverse\n        </button>\n\n        {(sortType || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setReverse(false);\n              setsortType('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}